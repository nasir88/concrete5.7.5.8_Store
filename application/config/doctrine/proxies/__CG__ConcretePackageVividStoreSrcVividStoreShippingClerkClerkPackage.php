<?php

namespace DoctrineProxies\__CG__\Concrete\Package\VividStore\Src\VividStore\Shipping\Clerk;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ClerkPackage extends \Concrete\Package\VividStore\Src\VividStore\Shipping\Clerk\ClerkPackage implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'reference', 'outerWidth', 'outerLength', 'outerDepth', 'emptyWeight', 'innerWidth', 'innerLength', 'innerDepth', 'innerVolume', 'maxWeight');
        }

        return array('__isInitialized__', 'id', 'reference', 'outerWidth', 'outerLength', 'outerDepth', 'emptyWeight', 'innerWidth', 'innerLength', 'innerDepth', 'innerVolume', 'maxWeight');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ClerkPackage $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setReference($reference)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReference', array($reference));

        return parent::setReference($reference);
    }

    /**
     * {@inheritDoc}
     */
    public function setOuterWidth($outerWidth)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOuterWidth', array($outerWidth));

        return parent::setOuterWidth($outerWidth);
    }

    /**
     * {@inheritDoc}
     */
    public function setOuterLength($outerLength)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOuterLength', array($outerLength));

        return parent::setOuterLength($outerLength);
    }

    /**
     * {@inheritDoc}
     */
    public function setOuterDepth($outerDepth)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOuterDepth', array($outerDepth));

        return parent::setOuterDepth($outerDepth);
    }

    /**
     * {@inheritDoc}
     */
    public function setEmptyWeight($emptyWeight)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmptyWeight', array($emptyWeight));

        return parent::setEmptyWeight($emptyWeight);
    }

    /**
     * {@inheritDoc}
     */
    public function setInnerWidth($innerWidth)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInnerWidth', array($innerWidth));

        return parent::setInnerWidth($innerWidth);
    }

    /**
     * {@inheritDoc}
     */
    public function setInnerLength($innerLength)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInnerLength', array($innerLength));

        return parent::setInnerLength($innerLength);
    }

    /**
     * {@inheritDoc}
     */
    public function setInnerDepth($innerDepth)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInnerDepth', array($innerDepth));

        return parent::setInnerDepth($innerDepth);
    }

    /**
     * {@inheritDoc}
     */
    public function setInnerVolume($innerVolume)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInnerVolume', array($innerVolume));

        return parent::setInnerVolume($innerVolume);
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxWeight($maxWeight)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxWeight', array($maxWeight));

        return parent::setMaxWeight($maxWeight);
    }

    /**
     * {@inheritDoc}
     */
    public function getID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getID', array());

        return parent::getID();
    }

    /**
     * {@inheritDoc}
     */
    public function getReference()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReference', array());

        return parent::getReference();
    }

    /**
     * {@inheritDoc}
     */
    public function getOuterWidth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOuterWidth', array());

        return parent::getOuterWidth();
    }

    /**
     * {@inheritDoc}
     */
    public function getOuterLength()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOuterLength', array());

        return parent::getOuterLength();
    }

    /**
     * {@inheritDoc}
     */
    public function getOuterDepth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOuterDepth', array());

        return parent::getOuterDepth();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmptyWeight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmptyWeight', array());

        return parent::getEmptyWeight();
    }

    /**
     * {@inheritDoc}
     */
    public function getInnerWidth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInnerWidth', array());

        return parent::getInnerWidth();
    }

    /**
     * {@inheritDoc}
     */
    public function getInnerLength()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInnerLength', array());

        return parent::getInnerLength();
    }

    /**
     * {@inheritDoc}
     */
    public function getInnerDepth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInnerDepth', array());

        return parent::getInnerDepth();
    }

    /**
     * {@inheritDoc}
     */
    public function getInnerVolume()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInnerVolume', array());

        return parent::getInnerVolume();
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxWeight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxWeight', array());

        return parent::getMaxWeight();
    }

    /**
     * {@inheritDoc}
     */
    public function update($data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'update', array($data));

        return parent::update($data);
    }

    /**
     * {@inheritDoc}
     */
    public function addOrUpdate($data, $package)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOrUpdate', array($data, $package));

        return parent::addOrUpdate($data, $package);
    }

    /**
     * {@inheritDoc}
     */
    public function save()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'save', array());

        return parent::save();
    }

    /**
     * {@inheritDoc}
     */
    public function delete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'delete', array());

        return parent::delete();
    }

}
