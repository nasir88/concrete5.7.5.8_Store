<?php

namespace DoctrineProxies\__CG__\Concrete\Package\VividStore\Src\VividStore\Order;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class OrderItem extends \Concrete\Package\VividStore\Src\VividStore\Order\OrderItem implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'oiID', 'pID', 'order', 'oiProductName', 'oiSKU', 'oiPricePaid', 'oiTax', 'oiTaxIncluded', 'oiTaxName', 'oiQty', 'pvID');
        }

        return array('__isInitialized__', 'oiID', 'pID', 'order', 'oiProductName', 'oiSKU', 'oiPricePaid', 'oiTax', 'oiTaxIncluded', 'oiTaxName', 'oiQty', 'pvID');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (OrderItem $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getID', array());

        return parent::getID();
    }

    /**
     * {@inheritDoc}
     */
    public function getProductID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductID', array());

        return parent::getProductID();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrder', array());

        return parent::getOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function getProductName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductName', array());

        return parent::getProductName();
    }

    /**
     * {@inheritDoc}
     */
    public function getSKU()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSKU', array());

        return parent::getSKU();
    }

    /**
     * {@inheritDoc}
     */
    public function getPricePaid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPricePaid', array());

        return parent::getPricePaid();
    }

    /**
     * {@inheritDoc}
     */
    public function getTax()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTax', array());

        return parent::getTax();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxIncluded()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxIncluded', array());

        return parent::getTaxIncluded();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxName', array());

        return parent::getTaxName();
    }

    /**
     * {@inheritDoc}
     */
    public function getQty()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQty', array());

        return parent::getQty();
    }

    /**
     * {@inheritDoc}
     */
    public function getProductVariationID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductVariationID', array());

        return parent::getProductVariationID();
    }

    /**
     * {@inheritDoc}
     */
    public function setProductID($productid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductID', array($productid));

        return parent::setProductID($productid);
    }

    /**
     * {@inheritDoc}
     */
    public function setOrder($order)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrder', array($order));

        return parent::setOrder($order);
    }

    /**
     * {@inheritDoc}
     */
    public function setProductName($oiProductName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductName', array($oiProductName));

        return parent::setProductName($oiProductName);
    }

    /**
     * {@inheritDoc}
     */
    public function setSKU($oiSKU)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSKU', array($oiSKU));

        return parent::setSKU($oiSKU);
    }

    /**
     * {@inheritDoc}
     */
    public function setPricePaid($oiPricePaid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPricePaid', array($oiPricePaid));

        return parent::setPricePaid($oiPricePaid);
    }

    /**
     * {@inheritDoc}
     */
    public function setTax($oitax)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTax', array($oitax));

        return parent::setTax($oitax);
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxIncluded($oiTaxIncluded)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxIncluded', array($oiTaxIncluded));

        return parent::setTaxIncluded($oiTaxIncluded);
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxName($oiTaxName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxName', array($oiTaxName));

        return parent::setTaxName($oiTaxName);
    }

    /**
     * {@inheritDoc}
     */
    public function setQty($oiQty)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQty', array($oiQty));

        return parent::setQty($oiQty);
    }

    /**
     * {@inheritDoc}
     */
    public function setProductVariationID($pvID)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductVariationID', array($pvID));

        return parent::setProductVariationID($pvID);
    }

    /**
     * {@inheritDoc}
     */
    public function add($data, $oID, $tax = 0, $taxIncluded = 0, $taxName = '')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'add', array($data, $oID, $tax, $taxIncluded, $taxName));

        return parent::add($data, $oID, $tax, $taxIncluded, $taxName);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubTotal', array());

        return parent::getSubTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function getProductOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductOptions', array());

        return parent::getProductOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function getProductOptionGroupNameByID($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductOptionGroupNameByID', array($id));

        return parent::getProductOptionGroupNameByID($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductOptionValueByID($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductOptionValueByID', array($id));

        return parent::getProductOptionValueByID($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductObject($pID = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductObject', array($pID));

        return parent::getProductObject($pID);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOrderItemsByOrder($order)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOrderItemsByOrder', array($order));

        return parent::removeOrderItemsByOrder($order);
    }

    /**
     * {@inheritDoc}
     */
    public function save()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'save', array());

        return parent::save();
    }

    /**
     * {@inheritDoc}
     */
    public function delete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'delete', array());

        return parent::delete();
    }

}
