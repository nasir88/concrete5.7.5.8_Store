<?php

namespace DoctrineProxies\__CG__\Concrete\Package\VividStore\Src\VividStore\Order;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Order extends \Concrete\Package\VividStore\Src\VividStore\Order\Order implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'oID', 'cID', 'oDate', 'pmName', 'smName', 'oShippingTotal', 'oDiscountTotal', 'oTax', 'oTaxIncluded', 'oTaxName', 'oTotal', 'transactionReference', 'oPaid', 'oPaidTotal', 'oRefundTotal', 'oPaidDate', 'oPaidExpiredDate', 'orderItems');
        }

        return array('__isInitialized__', 'oID', 'cID', 'oDate', 'pmName', 'smName', 'oShippingTotal', 'oDiscountTotal', 'oTax', 'oTaxIncluded', 'oTaxName', 'oTotal', 'transactionReference', 'oPaid', 'oPaidTotal', 'oRefundTotal', 'oPaidDate', 'oPaidExpiredDate', 'orderItems');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Order $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setCustomerID($cID)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomerID', array($cID));

        return parent::setCustomerID($cID);
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderDate($oDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderDate', array($oDate));

        return parent::setOrderDate($oDate);
    }

    /**
     * {@inheritDoc}
     */
    public function setPaymentMethodName($pmName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaymentMethodName', array($pmName));

        return parent::setPaymentMethodName($pmName);
    }

    /**
     * {@inheritDoc}
     */
    public function setShippingMethodName($smName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShippingMethodName', array($smName));

        return parent::setShippingMethodName($smName);
    }

    /**
     * {@inheritDoc}
     */
    public function setShippingTotal($shippingTotal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShippingTotal', array($shippingTotal));

        return parent::setShippingTotal($shippingTotal);
    }

    /**
     * {@inheritDoc}
     */
    public function setDiscountTotal($discountTotal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDiscountTotal', array($discountTotal));

        return parent::setDiscountTotal($discountTotal);
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxTotals($taxTotal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxTotals', array($taxTotal));

        return parent::setTaxTotals($taxTotal);
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxIncluded($taxIncluded)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxIncluded', array($taxIncluded));

        return parent::setTaxIncluded($taxIncluded);
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxLabels($taxLabels)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxLabels', array($taxLabels));

        return parent::setTaxLabels($taxLabels);
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderTotal($total)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderTotal', array($total));

        return parent::setOrderTotal($total);
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionReference($transactionReference)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionReference', array($transactionReference));

        return parent::setTransactionReference($transactionReference);
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderPaid($oPaid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderPaid', array($oPaid));

        return parent::setOrderPaid($oPaid);
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderPaidTotal($oPaidTotal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderPaidTotal', array($oPaidTotal));

        return parent::setOrderPaidTotal($oPaidTotal);
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderRefundTotal($oRefundTotal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderRefundTotal', array($oRefundTotal));

        return parent::setOrderRefundTotal($oRefundTotal);
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderPaidDate($oPaidDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderPaidDate', array($oPaidDate));

        return parent::setOrderPaidDate($oPaidDate);
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderPaidExpiredDate($oPaidExpiredDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderPaidExpiredDate', array($oPaidExpiredDate));

        return parent::setOrderPaidExpiredDate($oPaidExpiredDate);
    }

    /**
     * {@inheritDoc}
     */
    public function saveTransactionReference($transactionReference)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'saveTransactionReference', array($transactionReference));

        return parent::saveTransactionReference($transactionReference);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderID', array());

        return parent::getOrderID();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderItems()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderItems', array());

        return parent::getOrderItems();
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomerID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomerID', array());

        return parent::getCustomerID();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderDate', array());

        return parent::getOrderDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentMethodName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentMethodName', array());

        return parent::getPaymentMethodName();
    }

    /**
     * {@inheritDoc}
     */
    public function getShippingMethodName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShippingMethodName', array());

        return parent::getShippingMethodName();
    }

    /**
     * {@inheritDoc}
     */
    public function getShippingTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShippingTotal', array());

        return parent::getShippingTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function getDiscountTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiscountTotal', array());

        return parent::getDiscountTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxes', array());

        return parent::getTaxes();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxTotal', array());

        return parent::getTaxTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function getIncludedTaxTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIncludedTaxTotal', array());

        return parent::getIncludedTaxTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function getTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotal', array());

        return parent::getTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function getSubTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubTotal', array());

        return parent::getSubTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionReference()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionReference', array());

        return parent::getTransactionReference();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderPaid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderPaid', array());

        return parent::getOrderPaid();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderPaidTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderPaidTotal', array());

        return parent::getOrderPaidTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderRefundTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderRefundTotal', array());

        return parent::getOrderRefundTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderPaidDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderPaidDate', array());

        return parent::getOrderPaidDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderPaidExpiredDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderPaidExpiredDate', array());

        return parent::getOrderPaidExpiredDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomersMostRecentOrderByCID($cID)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomersMostRecentOrderByCID', array($cID));

        return parent::getCustomersMostRecentOrderByCID($cID);
    }

    /**
     * {@inheritDoc}
     */
    public function add($data, $pm, $transactionReference = '', $status = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'add', array($data, $pm, $transactionReference, $status));

        return parent::add($data, $pm, $transactionReference, $status);
    }

    /**
     * {@inheritDoc}
     */
    public function addCustomerAddress($customer = NULL, $includeShipping = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCustomerAddress', array($customer, $includeShipping));

        return parent::addCustomerAddress($customer, $includeShipping);
    }

    /**
     * {@inheritDoc}
     */
    public function addOrderItems($cart)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOrderItems', array($cart));

        return parent::addOrderItems($cart);
    }

    /**
     * {@inheritDoc}
     */
    public function save()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'save', array());

        return parent::save();
    }

    /**
     * {@inheritDoc}
     */
    public function delete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'delete', array());

        return parent::delete();
    }

    /**
     * {@inheritDoc}
     */
    public function createNeededAccounts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'createNeededAccounts', array());

        return parent::createNeededAccounts();
    }

    /**
     * {@inheritDoc}
     */
    public function completeOrder($transactionReference = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'completeOrder', array($transactionReference));

        return parent::completeOrder($transactionReference);
    }

    /**
     * {@inheritDoc}
     */
    public function completePayment($oID = NULL, $pmHandle = NULL, $statusPaid = NULL, $paidTotal = NULL, $paidDate = NULL, $paidTime = NULL, $refundTotal = NULL, $transactionReference = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'completePayment', array($oID, $pmHandle, $statusPaid, $paidTotal, $paidDate, $paidTime, $refundTotal, $transactionReference));

        return parent::completePayment($oID, $pmHandle, $statusPaid, $paidTotal, $paidDate, $paidTime, $refundTotal, $transactionReference);
    }

    /**
     * {@inheritDoc}
     */
    public function dispatchEmailNotifications()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'dispatchEmailNotifications', array());

        return parent::dispatchEmailNotifications();
    }

    /**
     * {@inheritDoc}
     */
    public function remove()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'remove', array());

        return parent::remove();
    }

    /**
     * {@inheritDoc}
     */
    public function isShippable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isShippable', array());

        return parent::isShippable();
    }

    /**
     * {@inheritDoc}
     */
    public function updateStatus($status = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateStatus', array($status));

        return parent::updateStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusHistory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusHistory', array());

        return parent::getStatusHistory();
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusHandle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusHandle', array());

        return parent::getStatusHandle();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttribute($ak, $value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttribute', array($ak, $value));

        return parent::setAttribute($ak, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttribute($ak, $displayMode = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttribute', array($ak, $displayMode));

        return parent::getAttribute($ak, $displayMode);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeValueObject($ak, $createIfNotFound = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeValueObject', array($ak, $createIfNotFound));

        return parent::getAttributeValueObject($ak, $createIfNotFound);
    }

    /**
     * {@inheritDoc}
     */
    public function addDiscount($discounts, $orderID)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDiscount', array($discounts, $orderID));

        return parent::addDiscount($discounts, $orderID);
    }

    /**
     * {@inheritDoc}
     */
    public function getAppliedDiscounts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAppliedDiscounts', array());

        return parent::getAppliedDiscounts();
    }

    /**
     * {@inheritDoc}
     */
    public function associateUser($cID)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'associateUser', array($cID));

        return parent::associateUser($cID);
    }

}
