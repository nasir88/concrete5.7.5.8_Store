<?php

namespace DoctrineProxies\__CG__\Concrete\Package\VividStore\Src\Attribute\Key;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class StoreOrderKey extends \Concrete\Package\VividStore\Src\Attribute\Key\StoreOrderKey implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'akID', 'error');
        }

        return array('__isInitialized__', 'akID', 'error');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (StoreOrderKey $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getAttributes($oID, $method = 'getValue')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributes', array($oID, $method));

        return parent::getAttributes($oID, $method);
    }

    /**
     * {@inheritDoc}
     */
    public function load($akID, $loadBy = 'akID')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'load', array($akID, $loadBy));

        return parent::load($akID, $loadBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeValue($avID, $method = 'getValue')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeValue', array($avID, $method));

        return parent::getAttributeValue($avID, $method);
    }

    /**
     * {@inheritDoc}
     */
    public function update($args)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'update', array($args));

        return parent::update($args);
    }

    /**
     * {@inheritDoc}
     */
    public function delete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'delete', array());

        return parent::delete();
    }

    /**
     * {@inheritDoc}
     */
    public function getIndexedSearchTable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIndexedSearchTable', array());

        return parent::getIndexedSearchTable();
    }

    /**
     * {@inheritDoc}
     */
    public function getSearchIndexFieldDefinition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSearchIndexFieldDefinition', array());

        return parent::getSearchIndexFieldDefinition();
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeKeyName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeKeyName', array());

        return parent::getAttributeKeyName();
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeKeyDisplayName($format = 'html')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeKeyDisplayName', array($format));

        return parent::getAttributeKeyDisplayName($format);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeKeyHandle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeKeyHandle', array());

        return parent::getAttributeKeyHandle();
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeKeyDisplayHandle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeKeyDisplayHandle', array());

        return parent::getAttributeKeyDisplayHandle();
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeKeyID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeKeyID', array());

        return parent::getAttributeKeyID();
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeKeyCategoryID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeKeyCategoryID', array());

        return parent::getAttributeKeyCategoryID();
    }

    /**
     * {@inheritDoc}
     */
    public function isAttributeKeySearchable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAttributeKeySearchable', array());

        return parent::isAttributeKeySearchable();
    }

    /**
     * {@inheritDoc}
     */
    public function isAttributeKeyInternal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAttributeKeyInternal', array());

        return parent::isAttributeKeyInternal();
    }

    /**
     * {@inheritDoc}
     */
    public function isAttributeKeyContentIndexed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAttributeKeyContentIndexed', array());

        return parent::isAttributeKeyContentIndexed();
    }

    /**
     * {@inheritDoc}
     */
    public function isAttributeKeyAutoCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAttributeKeyAutoCreated', array());

        return parent::isAttributeKeyAutoCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function isAttributeKeyColumnHeader()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAttributeKeyColumnHeader', array());

        return parent::isAttributeKeyColumnHeader();
    }

    /**
     * {@inheritDoc}
     */
    public function isAttributeKeyEditable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAttributeKeyEditable', array());

        return parent::isAttributeKeyEditable();
    }

    /**
     * {@inheritDoc}
     */
    public function getComputedAttributeKeyCategoryHandle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComputedAttributeKeyCategoryHandle', array());

        return parent::getComputedAttributeKeyCategoryHandle();
    }

    /**
     * {@inheritDoc}
     */
    public function getPackageID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPackageID', array());

        return parent::getPackageID();
    }

    /**
     * {@inheritDoc}
     */
    public function getPackageHandle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPackageHandle', array());

        return parent::getPackageHandle();
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeType', array());

        return parent::getAttributeType();
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeTypeHandle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeTypeHandle', array());

        return parent::getAttributeTypeHandle();
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeKeyType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeKeyType', array());

        return parent::getAttributeKeyType();
    }

    /**
     * {@inheritDoc}
     */
    public function export($axml, $exporttype = 'full')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'export', array($axml, $exporttype));

        return parent::export($axml, $exporttype);
    }

    /**
     * {@inheritDoc}
     */
    public function refreshCache()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'refreshCache', array());

        return parent::refreshCache();
    }

    /**
     * {@inheritDoc}
     */
    public function duplicate($args = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'duplicate', array($args));

        return parent::duplicate($args);
    }

    /**
     * {@inheritDoc}
     */
    public function inAttributeSet($as)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'inAttributeSet', array($as));

        return parent::inAttributeSet($as);
    }

    /**
     * {@inheritDoc}
     */
    public function setAttributeKeyColumnHeader($r)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttributeKeyColumnHeader', array($r));

        return parent::setAttributeKeyColumnHeader($r);
    }

    /**
     * {@inheritDoc}
     */
    public function reindex($table, $columnHeaders, $attribs, $rs = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'reindex', array($table, $columnHeaders, $attribs, $rs));

        return parent::reindex($table, $columnHeaders, $attribs, $rs);
    }

    /**
     * {@inheritDoc}
     */
    public function updateSearchIndex($prevHandle = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateSearchIndex', array($prevHandle));

        return parent::updateSearchIndex($prevHandle);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeValueIDList()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeValueIDList', array());

        return parent::getAttributeValueIDList();
    }

    /**
     * {@inheritDoc}
     */
    public function addAttributeValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAttributeValue', array());

        return parent::addAttributeValue();
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeKeyIconSRC()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeKeyIconSRC', array());

        return parent::getAttributeKeyIconSRC();
    }

    /**
     * {@inheritDoc}
     */
    public function getController()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getController', array());

        return parent::getController();
    }

    /**
     * {@inheritDoc}
     */
    public function render($view = 'view', $value = false, $return = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'render', array($view, $value, $return));

        return parent::render($view, $value, $return);
    }

    /**
     * {@inheritDoc}
     */
    public function __destruct()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__destruct', array());

        return parent::__destruct();
    }

    /**
     * {@inheritDoc}
     */
    public function validateAttributeForm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'validateAttributeForm', array());

        return parent::validateAttributeForm();
    }

    /**
     * {@inheritDoc}
     */
    public function createIndexedSearchTable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'createIndexedSearchTable', array());

        return parent::createIndexedSearchTable();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttributeSet($as)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttributeSet', array($as));

        return parent::setAttributeSet($as);
    }

    /**
     * {@inheritDoc}
     */
    public function clearAttributeSets()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'clearAttributeSets', array());

        return parent::clearAttributeSets();
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeSets()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeSets', array());

        return parent::getAttributeSets();
    }

    /**
     * {@inheritDoc}
     */
    public function saveAttributeForm($obj)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'saveAttributeForm', array($obj));

        return parent::saveAttributeForm($obj);
    }

    /**
     * {@inheritDoc}
     */
    public function setAttribute($obj, $value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttribute', array($obj, $value));

        return parent::setAttribute($obj, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function outputSearchHTML()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'outputSearchHTML', array());

        return parent::outputSearchHTML();
    }

    /**
     * {@inheritDoc}
     */
    public function getKeyName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getKeyName', array());

        return parent::getKeyName();
    }

    /**
     * {@inheritDoc}
     */
    public function getKeyHandle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getKeyHandle', array());

        return parent::getKeyHandle();
    }

    /**
     * {@inheritDoc}
     */
    public function getKeyID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getKeyID', array());

        return parent::getKeyID();
    }

    /**
     * {@inheritDoc}
     */
    public function loadError($error)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'loadError', array($error));

        return parent::loadError($error);
    }

    /**
     * {@inheritDoc}
     */
    public function isError()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isError', array());

        return parent::isError();
    }

    /**
     * {@inheritDoc}
     */
    public function getError()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getError', array());

        return parent::getError();
    }

    /**
     * {@inheritDoc}
     */
    public function setPropertiesFromArray($arr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPropertiesFromArray', array($arr));

        return parent::setPropertiesFromArray($arr);
    }

}
