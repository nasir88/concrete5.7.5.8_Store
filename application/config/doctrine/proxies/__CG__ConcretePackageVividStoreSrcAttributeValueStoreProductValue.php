<?php

namespace DoctrineProxies\__CG__\Concrete\Package\VividStore\Src\Attribute\Value;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class StoreProductValue extends \Concrete\Package\VividStore\Src\Attribute\Value\StoreProductValue implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'pID', 'akID', 'avID', 'attributeType', 'attributeKey', 'error');
        }

        return array('__isInitialized__', 'pID', 'akID', 'avID', 'attributeType', 'attributeKey', 'error');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (StoreProductValue $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setProduct($product)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProduct', array($product));

        return parent::setProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function delete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'delete', array());

        return parent::delete();
    }

    /**
     * {@inheritDoc}
     */
    public function __destruct()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__destruct', array());

        return parent::__destruct();
    }

    /**
     * {@inheritDoc}
     */
    public function validateAttributeValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'validateAttributeValue', array());

        return parent::validateAttributeValue();
    }

    /**
     * {@inheritDoc}
     */
    public function getValue($mode = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValue', array($mode));

        return parent::getValue($mode);
    }

    /**
     * {@inheritDoc}
     */
    public function getSearchIndexValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSearchIndexValue', array());

        return parent::getSearchIndexValue();
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeKey()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeKey', array());

        return parent::getAttributeKey();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttributeKey($ak)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttributeKey', array($ak));

        return parent::setAttributeKey($ak);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeValueID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeValueID', array());

        return parent::getAttributeValueID();
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeValueUserID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeValueUserID', array());

        return parent::getAttributeValueUserID();
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeValueDateAdded()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeValueDateAdded', array());

        return parent::getAttributeValueDateAdded();
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeTypeID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeTypeID', array());

        return parent::getAttributeTypeID();
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeTypeObject()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeTypeObject', array());

        return parent::getAttributeTypeObject();
    }

    /**
     * {@inheritDoc}
     */
    public function loadError($error)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'loadError', array($error));

        return parent::loadError($error);
    }

    /**
     * {@inheritDoc}
     */
    public function isError()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isError', array());

        return parent::isError();
    }

    /**
     * {@inheritDoc}
     */
    public function getError()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getError', array());

        return parent::getError();
    }

    /**
     * {@inheritDoc}
     */
    public function setPropertiesFromArray($arr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPropertiesFromArray', array($arr));

        return parent::setPropertiesFromArray($arr);
    }

}
