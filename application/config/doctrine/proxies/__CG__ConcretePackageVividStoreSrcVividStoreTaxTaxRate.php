<?php

namespace DoctrineProxies\__CG__\Concrete\Package\VividStore\Src\VividStore\Tax;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class TaxRate extends \Concrete\Package\VividStore\Src\VividStore\Tax\TaxRate implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'trID', 'taxEnabled', 'taxLabel', 'taxRate', 'taxBasedOn', 'taxAddress', 'taxCountry', 'taxState', 'taxCity');
        }

        return array('__isInitialized__', 'trID', 'taxEnabled', 'taxLabel', 'taxRate', 'taxBasedOn', 'taxAddress', 'taxCountry', 'taxState', 'taxCity');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (TaxRate $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setEnabled($enabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', array($enabled));

        return parent::setEnabled($enabled);
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxLabel($label)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxLabel', array($label));

        return parent::setTaxLabel($label);
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxRate($rate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxRate', array($rate));

        return parent::setTaxRate($rate);
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxBasedOn($basedOn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxBasedOn', array($basedOn));

        return parent::setTaxBasedOn($basedOn);
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxAddress($address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxAddress', array($address));

        return parent::setTaxAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxCountry($country)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxCountry', array($country));

        return parent::setTaxCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxState($state)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxState', array($state));

        return parent::setTaxState($state);
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxCity($city)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxCity', array($city));

        return parent::setTaxCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxRateID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxRateID', array());

        return parent::getTaxRateID();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', array());

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxLabel', array());

        return parent::getTaxLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxRate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxRate', array());

        return parent::getTaxRate();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxBasedOn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxBasedOn', array());

        return parent::getTaxBasedOn();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxAddress', array());

        return parent::getTaxAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxCountry', array());

        return parent::getTaxCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxState', array());

        return parent::getTaxState();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxCity', array());

        return parent::getTaxCity();
    }

    /**
     * {@inheritDoc}
     */
    public function isTaxable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isTaxable', array());

        return parent::isTaxable();
    }

    /**
     * {@inheritDoc}
     */
    public function calculate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'calculate', array());

        return parent::calculate();
    }

    /**
     * {@inheritDoc}
     */
    public function calculateProduct($productObj, $qty)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'calculateProduct', array($productObj, $qty));

        return parent::calculateProduct($productObj, $qty);
    }

    /**
     * {@inheritDoc}
     */
    public function save()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'save', array());

        return parent::save();
    }

    /**
     * {@inheritDoc}
     */
    public function delete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'delete', array());

        return parent::delete();
    }

}
